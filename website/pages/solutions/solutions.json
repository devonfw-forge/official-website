{"architecture_hexgagonal":{"headline":"Hexagonal architecture","path":"solution/architecture_hexgagonal","image":"./solution/architecture_hexgagonal/_previewImage.png","snippet":"\nThis article explains so-called Hexagonal Architecture which is one of architectural styles applicable for wide variety of applications / software.\n"},"cloud_storage_overview":{"headline":"Cloud Storage","path":"solution/cloud_storage_overview","image":"","snippet":"\nThis article mainly focuses on below topics:\n- What is Cloud Storage?\n- How does it works?\n- Benefits of Cloud Storage\n- Cloud Storage requirement\n- Types of Cloud Storage\n- Product and services offered by different vendors\n"},"communication":{"headline":"Communication among services","path":"solution/communication","image":"./solution/communication/_previewImage.png","snippet":"\nCommunication is a very important aspect while building IT application, especially large and complex one or one with microservices architecture. Based on your analysis of your problems, considering the following basic questions to start with:\n"},"endusermgmt_azure_aad":{"headline":"Enduser Management Solutions - Azure Active Directory","path":"solution/endusermgmt_azure_aad","image":"./solution/endusermgmt_azure_aad/_previewImage.png","snippet":"\nThis document describes patterns to manage the endusers of applications including authentication and authorization. Applications are assumed to be web applications. From a data modeling perspective the major entities are the application and its endusers.\n"},"iot_edge_processing_ms":{"headline":"IoT Edge Data Processing","path":"solution/iot_edge_processing_ms","image":"./solution/iot_edge_processing_ms/_previewImage.png","snippet":"\nThe solutions focus is at the data processing part at the edge within IoT platforms.\n"},"microservices_azure_aks":{"headline":"Microservice Platforms Solutions - Azure Kubernetes Service","path":"solution/microservices_azure_aks","image":"./solution/microservices_azure_aks/_previewImage.png","snippet":"\nMicroservice orchestration is the automatic process of managing or scheduling the work of individual microservices of an application within a cluster. The platform provides an automated process of managing, scaling, and maintaining microservices of an application.\nThe container orchestration platform Kubernetes is the current de facto standard (Docker swarm and others are nowadays neglectable compared to Kubernetes). Containers are units that packages up code and all its dependencies like libr ..."},"monitoring_aws_cloudwatchCustomAlarm":{"headline":"Customise your cloudwatch alerts","path":"solution/monitoring_aws_cloudwatchCustomAlarm","image":"","snippet":"\nCloudwatch alarms give you the ability to notify you in case an alarm is triggered. The standard message layout of cloudwatch is very inflexible and not customisable. With this approach it is possible to fill HTML templates with further information, links and buttons to find the solution ASAP.\n"},"monitoring_azure_native":{"headline":"Monitoring Solutions - Azure Native","path":"solution/monitoring_azure_native","image":"./solution/monitoring_azure_native/_previewImage.png","snippet":"\nUsed definition: A monitoring solution helps the monitoring consumer achieve the satisfactory level of control of a defined service. (Link to source)\n"},"monitoring_openTelemetry":{"headline":"Monitoring your microservices with openTelemetry","path":"solution/monitoring_openTelemetry","image":"./solution/monitoring_openTelemetry/_previewImage.png","snippet":"\nWith the complexity and size of microservice systems, which include hundreds of small services, keeping an overview can be quite challenging. Usually one monolitic application can be scanned for potential errors, as failures in the system directly reference this one application. With microservices the area to search in could be narrowed down, but never to an extend adressing one specific service being the root cause. Therefore, to keep track of runtime problems and the fullfillment of nonfunct ..."},"provisioning_azure_azuredevops":{"headline":"Provisioning Solutions - Azure DevOps","path":"solution/provisioning_azure_azuredevops","image":"./solution/provisioning_azure_azuredevops/_previewImage.png","snippet":"\nThis document describes patterns to automate the deployment of an application to a target environment. The major players in this documentation are (1) the process as a whole (aka provisioning), (2) automation code and (3) application/ infra code to be deployed. Additionally a third aspect is cross functionalities (3) that affect the automation and the application/infra code such as compliance.\n"},"provisioning_azure_github":{"headline":"Provisioning Solutions - GitHub","path":"solution/provisioning_azure_github","image":"./solution/provisioning_azure_github/_previewImage.png","snippet":"\nThis document describes patterns to automate the deployment of an application to a target environment. The major players in this documentation are (1) the process as a whole (aka provisioning), (2) automation code and (3) application/ infra code to be deployed. Additionally a third aspect is cross functionalities (3) that affect the automation and the application/infra code such as compliance.\n"},"security_authentication":{"headline":"Authentication","path":"solution/security_authentication","image":"./solution/security_authentication/_previewImage.png","snippet":"\nAccess control is an important aspect for the security in IT application landscapes. There are two different aspects to distinguish:\n"},"security_authorization":{"headline":"Authorization","path":"solution/security_authorization","image":"./solution/security_authorization/_previewImage.png","snippet":"\nAccess control is an important aspect for the security in IT application landscapes. There are two different aspects to distinguish: authentication and authorization.\n"},"streamproc_azure_kafka":{"headline":"Stream Processing Solutions - Apache Kafka on Microsoft Azure","path":"solution/streamproc_azure_kafka","image":"./solution/streamproc_azure_kafka/_previewImage.png","snippet":"\nStream processing is a method of tracking and analyzing (processing) streams of information (data) about things that happen (events) and deriving a conclusion from them. Related words also referring to the core of that technology are: Complex Event Processing (CEP) or Command and Query Responsibility Segregation (CQRS). Due to its benefits (see below) its also a vital technology in conjunction with real-time processing.\n"}}