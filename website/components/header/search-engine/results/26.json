{"type":"doc","filename":"asciidoc_devonfw-guide_devon4j.wiki_devon4j.asciidoc_guides_2.html","anchor":"devonfw-guide_devon4j.wiki_quarkus_guide-native-image.asciidoc","title":"Building a native image","breadcrumbs":["Java","Quarkus","Guides"],"text":"Building a native image\n\nQuarkus provides the ability to create a native executable of the application called native image.\nUnlike other Java based deployments, a native image will only run on the architecture and operating system it is compiled for.\nAlso, no JVM is needed to run the native-image.\nThis improves the startup time, performance, and efficiency.\nA distribution of GraalVM is needed.\nYou can find the differences between the available distributions here.\n\n\nTo build your quarkus app as a native-image, you have two options that are described in the following sections.\n\n\nBuild a native executable with GraalVM\n\nTo build a Quarkus application, you can install GraalVM locally on your machine, as described below.\nTherefore, read the basic Quarkus application chapter, or clone the example project provided by devonfw.\nFollow this chapter from the Quarkus Guide for building a native executable.\n\n\nInstalling GraalVM\n\nA native image can be created locally or through a container environment.\nTo create a native image locally, an installed and configured version of GraalVM is needed. You can follow the installation guide from Quarkus or the guide provided by GraalVM for this.\n\n\n\n\nBuild a native executable with GraalVM through container environment\n\nIn order to make the build of native images more portable, you can also use your container environment and run the GraalVM inside a container (typically Docker).\nYou can simply install Docker with your devonfw-ide distribution, just follow this description Docker with devonfw-ide.\nFollow this chapter to build a native Linux image through container runtime.\n\n\n\nConfiguring the native executable\n\nA list of all configuration properties for a native image can be found here.\n\n\n\n\n\n"}