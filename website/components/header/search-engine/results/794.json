{"type":"doc","filename":"devonfw-guide_ide.wiki_structure.asciidoc.html","anchor":"devonfw-guide_ide.wiki_settings.asciidoc","title":"settings","breadcrumbs":["devonfw-ide","Usage","Structure"],"text":"settings\n\nThe devonfw-ide requires settings with configuration templates for the arbitrary tools.\n\n\nTo get an initial set of these settings we provide the default ide-settings as an initial package. These are also released so you can download the latest stable or any history version at maven central.\n\n\nTo test devonfw-ide or for very small projects you can also use these the latest default settings (just hit return when setup is asking for the Settings URL).\nHowever, for collaborative projects we strongly encourage you to distribute and maintain the settings via a dedicated and project specific git repository.\nThis gives you the freedom to control and manage the tools with their versions and configurations during the project lifecycle.\nTherefore simply follow the admin usage guide.\n\n\nStructure\n\nThe settings folder (see SETTINGS_PATH) has to follow this file structure:\n\n\nListing 4. File structure of settings\n\n\n\n\n\nAs you can see, the settings folder contains sub-folders for tools of the IDE.\nSo the devon folder contains devon.properties files for the configuration of your environment.\nFurther, for the IDEs such as eclipse or vscode, the according folders contain the templates to manage the workspace via our configurator.\n\n\n\nConfiguration Philosophy\n\nDifferent tools and configuration files require a different handling:\n\n\n\n\nWhere suitable, we directly use these configurations from your settings (e.g. for eclipse/lifecycle-mapping-metadata.xml, or eclipse/project.dictionary).\n\n\nThe devon folder in settings contains templates for configuration files. There are copied to the devonfw-ide installation during setup (if no such file already exists). In this way the settings repository can provide reasonable defaults but allows the user to take over control and customize to his personal needs (e.g. .m2/settings.xml).\n\n\nOther configurations need to be imported manually. To avoid manual steps and simplify use we try to automate as much as possible. This currently applies to sonarqube profiles but will be automated with sonar-devon4j-plugin in the future.\n\n\nFor tools with complex configuration structures like eclipse, intellij, or vscode we provide a smart mechanism via our configurator.\n\n\n\n\n\nCustomize Settings\n\nYou can easily customize these settings for the requirements of your project. We suggest that one team member is responsible to ensure that everything stays consistent and works.\n\n\nYou may also create new sub-folders in settings and put individual items according to your needs. E.g. you could add scripts for greasemonkey or tampermonkey, as well as scripts for your database or whatever may be useful and worth to share in your team. However, to share and maintain knowledge we recommend to use a wiki.\n\n\n\n\n\n"}