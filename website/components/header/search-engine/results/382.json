{"type":"doc","filename":"devonfw-guide_general_db_guide-database.asciidoc_nosql.html","anchor":"devonfw-guide_general_db_guide-database.asciidoc_nosql","title":"NoSQL","breadcrumbs":["Choosing your Database","Database","NoSQL"],"text":"NoSQL\n\nWhile not (yet) officially supported and recommendet there are also interesting NoSQL (Not Only SQL) databases that could be an interesting alternative. Please be aware that you will typically not be able to use JPA (and hibernate). Further before choosing a NoSQL database you should check the following aspects:\n\n\n\n\nIs the database of choice reliable and mature enough for your project?\n\n\nCan the operators of your product support the database of choice properly (provisioning, administration, backup, scaling &amp; clustering, monitoring, etc.)?\n\n\nDoes the database of choice meet the requirements of your project (ACID vs. eventual consistencey, CAP theorem)?\n\n\n\n\nThere are good reasons to choose a particular NoSQL database in specific cases (e.g. extreme demand for big-data, throughput or scaling).\nBut as indicated by the questions above you need to be fully aware of what you are doing.\nNoSQL databases can be schemaless (untyped, dynamic &amp; flexible) and/or schemaful (typed, structured &amp; strict).\nFurhter, there are different types of NoSQL databases that are discussed in the following sub-sections:\n\n\n"}