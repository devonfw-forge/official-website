{"type":"doc","filename":"devonfw-guide_general_db_guide-database.asciidoc_nosql.html","anchor":"devonfw-guide_general_db_guide-database.asciidoc_java","title":"Java","breadcrumbs":["Choosing your Database","Database","NoSQL"],"text":"Java\n\nColumn DB\n\nColumn NoSQL databases are more related to a regular RDBMS with their tables and columns.\nHowever, they typically do not offer relational support with joins to the same level as you expect from an RDBMS.\nTherefore, you have to carefully design your data-model upfront with the all the knowledge how you later want to query your data.\n\n\nThe most prominent options are:\n\n\n\n\nCassandra (high-performance, schema-based DB)\n\n\nHBase (distributed, big-data Hadoop database)\n\n\n\n\n\nKey-Value DB\n\nAs indicated by the name, a key-value database stores objects as key/value pairs similar to Properties or Map in Java.\n\n\nThe most prominent options are:\n\n\n\n\nRedis (in-memory key/value store, especially used as cache or message broker)\n\n\naerospike\n\n\n\n\n\nDocument DB\n\nA document database is similar to a key-value database, but it stores objects in standard structured formats such as XML, JSON, or BSON.\nTherefore not only flat key/value pairs but even trees of hierarchical data can be stored, retrieved and queried.\n\n\nThe most prominent options are:\n\n\n\n\nMongoDB\n\n\nCouchDB\n\n\nRavenDB\n\n\n\n\n\nGraph DB\n\nIf the connections (links/relations) between your data is key and an RDBMS is just not flexible or fast enough for your plans, then a graph database can help you.\nThey are very strong on storing and querying complex connections between entities.\nFor queries there are even specific standards and languages like Gremlin.\n\n\nThe most prominent options are:\n\n\n\n\nneo4j\n\n\nblazegraph\n\n\n\n\n\nHybrid DB\n\nIn addition to the above types there are some NoSQL databases that are hybrid and combine the features and aspects of these types.\nWhile as an architect and developer you might love the idea to get all in one, you have to be careful with your choice.\nIf you do not exactly know your problem, you are not ready to make the right choice for your database.\nFurther, you might still be best-off with an good old RDBMS if you need to address multiple aspects together.\nAnyhow, for experiments, PoCs, or small microservices with little risk it might be a great idea to choose a hybrid NoSQL database.\nIf you have collected very positive, profound and productive experience with such product you can grow on it.\n\n\nThe most prominent options are:\n\n\n\n\nOrientDB (object-oriented, hyper-flexible, column- and graph-based)\n\n\n\n\n\n\n\n\n"}