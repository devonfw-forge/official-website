{"type":"doc","filename":"devonfw-guide_devon4j.wiki_quarkus_getting-started-quarkus.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_quarkus_getting-started-quarkus.asciidoc_create-and-build-a-docker-image","title":"Create and build a Docker Image","breadcrumbs":["Java","Quarkus","Quarkus Quickstart"],"text":"Create and build a Docker Image\n\nQuarkus supports Jib, S2I and Docker for building images. We focus on building a Quarkus App with Docker.\nYou get a generated Dockerfile from Quarkus in the src/main/docker folder of any project generated from Quarkus. There are multiple Dockerfiles.\n\n\nDockerfiles\n\n\nDockerfile.jvm\nDockerfile for Quarkus application in the JVM mode. running in Red Hat Universal Base Image 8 Minimal Container\n\n\nDockerfile.legacy-jar\nDockerFile for Quarkus application in JVM mode with the legacy jar running in Red Hat Universal Base Image 8 Minimal Container.\n\n\nDockerfile.native\nDockerfile using the native executable running in Red Hat Universal Base Image 8 Minimal container.\n\n\nDockerfile.native-distroless\nThe native file will run in a Distroless container. Distroless images are very small containers with just the application and runtime dependencies and without the other programs that come with a Linux distribution.\n\n\n\n\n\n\nFor more information to the different executables go back to the chapter Packaging of a Quarkus application and creation of a native executable\n\n\n\n\nTo simply build and run a Docker image, you can follow the instructions Quarkus provides for every Dockerfile in the comments block.\n\n\nDocker commands example for the JVM Dockerfile from our reference project\n\n\n\n\n\n\n\nQuarkus is also able to build the image while packaging the application, so you donâ€™t have to execute the command from above.\nTo perform Docker builds with the generated Dockerfiles from above, you need to add the following extension to your project with the command mvn quarkus:add-extension -Dextensions=\"container-image-docker\".\n\n\nYou also have to set the quarkus.container-image.build=true. You can add this to your application.properties or just append it to the packaging command like this: ./mvn package -Dquarkus.container-image.build=true.\n\n\nIf your needs exceed the instructions given by the file, we recommend to follow the Docker getting started guide to get familiar with Docker and customize the Dockerfiles according to your needs.\nTo specify your container build, you can use the general container image configurations properties and the Docker image configurations properties when building and runnig Docker images.\n\n\n\n\n\n"}