{"type":"doc","filename":"devonfw-guide_devon4j.wiki_Spring-native-vs-Quarkus.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_spring-native-vs-quarkus.asciidoc_considering-devonfw-best-practices","title":"Considering devonfw best practices","breadcrumbs":["Java","Quarkus","Spring Native vs Quarkus"],"text":"Considering devonfw best practices\n\nAs of now, devonfw actively supports Spring but not Spring Native.\nAlthough Quarkus has been released to a stable release in early 2021, it has been already used in multiple big projects successfully showing its potential to implement cloud native services with low resource consumption matching the needs of scalability and resilience in cloud native environments.\nWith major stakeholders behind the open source community like Red Hat, its development and growth from its kickoff to the current state is very impressive and really shows the market needs and focus.\nAnother big advantage of Quarkus is that it started on a green field and therefore did not need to circumvent main pillars of the spring framework like reflection, being able to take clean and up-to-date design decisions not needing to cope with legacy issues.\nNonetheless, there is a experimental support also for some spring libraries already available in Quarkus, which make switching from spring to Quarkus much more easier if needed.\nWe also provide a guide\nfor Spring developers who want to adopt or try Quarkus for their\n(next) projects as it really has some gamechanging advantages over\nSpring.\n\n\n\n"}