{"type":"doc","filename":"devonfw-guide_devon4net.wiki_codeconvention.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_codeconvention.asciidoc_general-naming-conventions","title":"General Naming Conventions","breadcrumbs":[".net","Coding conventions","Code conventions"],"text":"General Naming Conventions\n\n Choose easily readable identifier names.\n\n\n Favor readability over brevity.\n\n\n\n\ne.g.: GetLength is a better name than GetInt.\n\n\nAim for the “ubiquitous language” (E. Evans): A language distilled from the domain language, which helps the team clarifying domain concepts and communicating with domain experts.\n\n\n\n\n Prefer adding a suffix rather than a prefix to indicate a new version of an existing API.\n\n\n Use a numeric suffix to indicate a new version of an existing API, particularly if the existing name of the API is the only name that makes sense (i.e., if it is an industry standard) and if adding any meaningful suffix (or changing the name) is not an appropriate option.\n\n\n Do not use underscores, hyphens, or any other non-alphanumeric characters.\n\n\n Do not use Hungarian notation. Hungarian notation is the practice of including a prefix in identifiers to encode some metadata about the parameter, such as the data type of the identifier:\n\n\n\n\n\n\n\n\nPrefix\nDefinition\n\n\nb\nboolean\n\n\ne\nenum\n\n\ntxt\ntext boxes\n\n\n\n\ne.g:\n\n\n\n\n\n\n\n Avoid using identifiers that conflict with keywords of widely used programming languages.\n\n\n Do not use abbreviations or contractions as part of identifier names.\n\n\n Do not use any acronyms that are not widely accepted, and even if they are, only when necessary.\n\n\n Do not use the \"Ex\" (or a similar) suffix for an identifier to distinguish it from an earlier version of the same API.\n\n\n Do not use C# reserved words as names.\n\n\n\n"}