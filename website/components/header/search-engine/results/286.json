{"type":"doc","filename":"devonfw-guide_devon4net.wiki_howto.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_howto.asciidoc_how-to-configure-and-use-keycloak-server","title":"How to: Configure and use Keycloak server","breadcrumbs":[".net","How To section","How to use devon4net"],"text":"How to: Configure and use Keycloak server\n\nWhat is Keycloak?\n\nKeycloak is an open-source tool that provides identity and access management providing highly secure properties to your application.  It supports multiple protocols such as OAuth and OpenID. It has full support for SSO (Single Sign-On and Single Sign-Out) and third party Social Identity Providers such as Google, Twitter, Facebook…​\n\n\nYou can also connect it to some type of user database if you already have one for your client. This allows you to interconnect multiple applications through same users and data.\n\n\nOne of the most interesting features is the GUI available through and end-point that allows you to configure and manage your Keycloak settings and properties.\n\n\nLong story short, Keycloak is a server that manages all your user related interactions, such as roles, groups, access tokens…​ so you can focus in developing your application and don’t have to reinvent the wheel.\n\n\n\nDocker Image\n\nFor this example we will be running the Keycloak docker image and exposing it in a local port.\n\n\n\n\n\nNote\n\n\nPlease make sure you have Docker installed in your machine before running the command.\n\n\n\n\n\nTo start the Keycloak Server run the following command:\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\nThis whole guide is meant to be used with the Keycloak Server version 18.0.1. It may not work in the same way in future versions.\n\n\n\n\n\nThis will start the keycloak server in a docker image. It will be availabe in your localhost port 8080. As you can also see by the command, it will create an initial admin user with username admin and password admin. You can sign in navigating to the address localhost:8080 and using this initial credentials.\n\n\n\n\n\nFigure 25. Keycloak Sign In\n\n\n\nRealms\n\nIn Keycloak, a realm is the same as an environment.  It enables the creation of exclusive groups of users and applications. In Keycloak, there is just one realm by default, named master. This is for managing Keycloak only, therefore don’t use it for your own programs.\n\n\nTo create a realm you can hover the small arrow where it says Master in the dashboard and click on Add realm.\n\n\n\n\n\nFigure 26. Create a realm in keycloak\n\n\nChoose a name, for this example we will name it MyRealm, and then click Create.\n\n\nNow when your realm is selected, you will be able to configure it through the Realm Settings tab in the left side menu.\n\n\n\n\n\nNote\n\n\nPlease visit the Keycloak documentation to learn more about how you can configure it and what options do you have.\n\n\n\n\n\n\nClients\n\nA client, in Keycloak is equivalent to an application. You can add multiple applications and all can use the same users, groups, roles…​\n\n\n\n\n\nFigure 27. Create a client in keycloak\n\n\nNow fill the form choosing at least a required client id. You can also select the protocol you will be using:\n\n\n\n\nOpenID connect allows Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server.\n\n\nSAML enables web-based authentication and authorization scenarios including cross-domain single sign-on (SSO) and uses security tokens containing assertions to pass information.\n\n\n\n\n\n\n\nFigure 28. Create a client in keycloak\n\n\n\nUsers\n\nTo create a new user follow the next steps:\n\n\n\n\nLog into the Keycloak admin console\n\n\nSelect the Realm in which you want to create users:\n\n\n\n\nFigure 29. Keycloak administrator console\n\n\n\nNavigate to the Users section (1) in the left-side bar, then the Add user button (2):\n\n\n\n\nFigure 30. Add a user in Keycloak\n\n\n\nComplete the fields (1) and click the Save button (2):\n\n\n\n\nFigure 31. Add a user in Keycloak\n\n\n\n\nThe only required field is the username.\n\n\nThe required user actions field refers to some action that the user must perform upon first logging in.\n\n\n\n\n\nSet a password for the user:\n\n\n\n\nFigure 32. Set credentials to a user in Keycloak\n\n\n\n\nNavigate to the Credentials tab (1).\n\n\nEnter a password (2).\n\n\nConfirm the password (3).\n\n\n(Optional)\nChange the switch to on if you want the user to change their password after the first login (4).\n\n\nClick the Set Password button to confirm the changes (5).\n\n\n\n\n\n\n\n\nGroups\n\nGroups in Keycloak allow you to manage a common set of attributes and role mappings for a set of users. Let’s create a new group and add some users inside:\n\n\n\n\nClick the Groups section (1) in the left-side bar, then the New button (2):\n\n\n\n\nFigure 33. Create a group in Keycloak\n\n\n\nInsert the name of the group and then click the Save button:\n\n\n\n\nFigure 34. Create a group in Keycloak\n\n\n\nGroups are hierarchical. A group can have many subgroups, but a group can only have one parent. Subgroups inherit the attributes and role mappings from the parent. This applies to the user as well. By clicking in a group (1) and then clicking the New button (2), you can create a subgroup.\n\n\n\n\nFigure 35. Create a subgroup in Keycloak\n\n\nFor example, you could have something like this:\n\n\n\n\n\nFigure 36. Create a group in Keycloak\n\n\n\nAdd users to the groups:\n\n\n\nNavigate to the Users section (1) in the left-side bar, then select the user you want to add to a group and click on the Edit button (2):\n\n\n\n\nFigure 37. Add users to a group in Keycloak\n\n\n\nClick the Groups tab (1), select the group in which the user should be added (2), and then click the Join button (3):\n\n\n\n\nFigure 38. Add users to a group in Keycloak\n\n\n\nYou will see something like this:\n\n\n\n\nFigure 39. Add users to a group in Keycloak\n\n\n\n\n\n\n\n\n\nRoles\n\nRealm Roles\n\nRealm-level roles are a global namespace to define your roles. To add a new Real Role you have to:\n\n\n\n\nNavigate to the Roles section in the left-side bar (1), and click the Add Roles button (2):\n\n\n\n\nFigure 40. Create a new Realm Role in Keycloak\n\n\n\nInput a role name and click the Save button:\n\n\n\n\nFigure 41. Create a new Realm Role in Keycloak\n\n\n\n\nThe description field is not required\n\n\n\n\n\nNow you may add users to that role as follows:\n\n\n\nNavigate to the Users section (1) and select the Edit button (2) for the user to whom you want to assign the role:\n\n\n\n\nFigure 42. adding a Realm Role to a user in Keycloak\n\n\n\nSelect the Role Mappings tab (1), select the Role you want to assign (2) and then click the Add selected button (3):\n\n\n\n\nFigure 43. adding a Realm Role to a user in Keycloak\n\n\n\n\n\n\n\n\n\nClient Roles\n\nClient roles are basically a namespace dedicated to a client. Each client gets its own namespace. Client roles are managed under the Roles tab under each individual client:\n\n\n\n\n\nFigure 44. Creating a Client Role in Keycloak\n\n\nInput a role name and click the Save button:\n\n\n\n\n\nFigure 45. Creating a Client Role in Keycloak\n\n\nFor adding the Client Role to an user:\n\n\nNavigate to the Users section (1) and select the correct user to asign the role, select the Role Mappings tab (2), in the Client Roles section select the Client (3), select the desired Role to assign (4) and click the Add selected button (5)\n\n\n\n\n\nFigure 46. adding a Client Role to a user in Keycloak\n\n\n\n\nHardcoded audience\n\nWhen your service relies on realm roles or does not rely on the token’s roles at all, a hardcoded audience can be useful.\nA hardcoded audience is a protocol mapper that adds the client ID of the specified service client to the token as an audience.\nIf you want to use a different audience than the client ID, you can use any custom value, such as a URL.\n\n\nThe protocol mapper can be added directly to the frontend client.\nWhen the protocol mapper is directly added, the audience is always added as well.\n\n\nFor better control over the protocol mapper, you can create the protocol mapper on the dedicated client scope:\n\n\n\n\nGo to the Client Scopes section in the left-side bar.\n\n\nEnter the name for the client scope.\n\n\nClick the Save button.\n\n\n\n\nFigure 47. adding a Client Scope in Keycloak\n\n\n\n\n\nFor create the mapper itself follow the nexts steps:\n\n\n\n\nGo to the Mappers tab.\n\n\nClick the Create button.\n\n\n\n\nFigure 48. adding a mapper to a Client Scope in Keycloak\n\n\n\n\n\nIn the next screen configure the Mapper as follows:\n\n\n\n\nEnter the name of the mapper.\n\n\nIn the Mapper type select Audience\n\n\nClick the Save button.\n\n\n\n\nFigure 49. adding a mapper to a Client Scope in Keycloak\n\n\n\n\n\n\nKeycloak Sample\n\nThis template allows you to understand the authentication and authorization process using Keycloak:\n\n\n\n\nAuthentication: Is the process of confirming that someone or something is who they claim to be.\nTo secure access to an application or its data, most technology systems employ some form of authentication.\nWhen you need to access an online site or service, for example, you usually have to enter your username and password.\nThen, in the background, it compares the username and password you entered to a record in its database.\nIf the information you provided matches, the system considers you a valid user and grants you access.\n\n\nAuthorization: Is the security process that determines a user or service’s level of access. In technology, we use authorization to give users or services permission to access some data or perform a particular action. Authentication verifies the user (Lucia) before allowing them access, and authorization determines what they can do once the system has granted them access (view sales information, for example).\n\n\n\n\nIn the Download section you will find a sample that you can use as a template for integrating Keycloak in your application.\n\n\n\n\n\nNote\n\n\nPlease download the template so you can follow the guide successfully.\n\n\n\n\n\nThe template shows an example of a School with two types of entities, Student and Teacher, the teachers also have the Administrator role, that allows to access to their Student list.\n\n\nIn the application you will be able to authenticate yourself through a username and password, and this will give you an authorization token that will allow you to use the application with a certain role.\n\n\nKeycloak Setup\n\nTo setup the keycloak server we provide the realm_export.json file that is the configuration of the server that we need to use the template.\n\n\nFor import the Realm follow the steps below:\n\n\n\n\n\n\n\n\nFigure 50. Import a realm in keycloak\n\n\n\n\nCreate a new Realm (1)\n\n\nClick in the Select file button and choose the realm_export.json file (2)\n\n\nEnter a name for your Realm and click the Create button.\n\n\n\n\nThe next step is to create users in your realm for that follow the next steps:\n\n\n\n\nNavigate to the Users section (1) in the left-side bar, then the Add user button (2):\n\n\n\n\nFigure 51. Add a user in Keycloak\n\n\n\nComplete the fields (1) and click the Save button (2):\n\n\n\n\nFigure 52. Add a user in Keycloak\n\n\n\nSet a password for the user:\n\n\n\n\nFigure 53. Set credentials to a user in Keycloak\n\n\n\n\nNavigate to the Credentials tab (1).\n\n\nEnter a password (2).\n\n\nConfirm the password (3).\n\n\n(Optional)\nChange the switch to on if you want the user to change their password after the first login (4).\n\n\nClick the Set Password button to confirm the changes (5).\n\n\n\n\n\n\n\nFor this example, we created two user types,student and teacher:\n\n\n\n\n\nFigure 54. Users for the template\n\n\nNow we are going to assign to the user teacher, the Administrator Role, for that follow the nexts steps:\n\n\nNavigate to the Users section (1) and select the correct user to asign the role, select the Role Mappings tab (2), in the Client Roles section select the SchoolApplication Client (3), select the Administrator Role (4) and click the Add selected button (5)\n\n\n\n\n\nFigure 55. adding a Client Role to a user in Keycloak\n\n\n\n\n\nNote\n\n\nIf you need more information about how to configure the Keycloak server please refer to the How to: Configure Keycloak server section.\n\n\n\n\n\n\nDevon4net.Application.Keycloak\n\nThis is the startup project of the template. Its main purpose is to launch the api and configure it using the settings files. The following figure shows the directory tree of the application:\n\n\n\n\n\nFigure 56. Devon4net.Application.Keycloak Directory tree\n\n\n\n\nControllers: This template, has two controllers: the KeycloakController for obtaining the access token and the SchoolController for testing that token and the user roles.\n\n\nModel: The model objects of the application. This template is about a School so we have Persons that are also Students or Teachers. The Teachers will have the Administrator role aswell.\n\n\n\n\nConfiguration\n\nThe configuration is done in the appsettings.json file. It can contain subversions following the structure appsettings.{environment}.json. For the keycloak sample, the configuration is done as follows:\n\n\n\n\n\n\n\n\n\nRealm: Your Keycloak realm’s name.\n\n\nUrl: The direction of your Keycloak server.\n\n\nClientId: The Id of the Client that you created in the Keykloak server administrator console.\n\n\nGrantType: The grant type used to obtain the token.\n\n\n\n\n\nControllers\n\nKeycloakController\n\nIt only has one method with the AllowAnonymous annotation, that means that this method doesn’t need authorization.\n\n\n\n\n\n\n\nThe Login method calls the Keycloak Service to retrieve the token, it has two parameters, the username and the password.\n\n\n\n\n\nFigure 57. Keycloak Controller\n\n\n\nSchoolController\n\nOnce we have the access token we can use the methods of this controller, for that we have to authorize ourselves:\n\n\n\n\n\n\n\n\nFigure 58. Authorization with the access token\n\n\nThere are two methods available for this controller:\n\n\n\n\nGetStudentSubjects(): For this method, the user should be authorized; either students or teachers can use it.\n\n\nGetTeacherStudents(): This method access is restricted to teachers only, as indicated by the following policy:\n\n\n\n\n\n\nThis policy specifies that only teachers with the Administrator role are permitted to use this method.\n\n\n\n\n\n\n\n\nDevon4Net.Application.Keycloak.Implementation\n\nThis package contains all the implementation classes. You will find the following directory tree:\n\n\n\n\n\nFigure 59. Package directory tree\n\n\nWe have organized the files as if it was a Devon4Net module package:\n\n\n\n\nConfiguration: Contains all the files necesary for configuration. You can use realm-export.json to import the keycloak configuration for this specific example.\n\nYou will find in the KeycloakConfiguration class how you can add the different policies and the authorization and authentication configuration.\n\n\nFor example you can use the following code to add a policy that requires the claim user_roles as Administrator:\n\n\n\n\n\n\n\n\nModel: Contains the model objects. In this case we only need the token, which is the response of keycloak but we could put here also the user, for example, if we were to retrieve the information from keycloak.\n\n\nOptions: This directory contains the model for all the options used to configure.\n\n\nServices: This directory contains all the services. There is only one service, which access keycloak through the end-points available.\n\nIn this example we only need the token, so there is a method accessing the token end-point from keycloak. You can see the end-points available in keycloak in its dashboard.\n\n\n\n\n\n\n\nDownloads\n\n\n\nKeycloak Sample\n\n\n\n\n\nReferences\n\n\n\nGetting Started (Docker) - Keycloak Docs\n\n\n\n\n\n\n"}