{"type":"doc","filename":"devonfw-guide_devon4net.wiki_packages.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_packages.asciidoc_devon4net.infrastructure.extensions","title":"Devon4Net.Infrastructure.Extensions","breadcrumbs":[".net","Packages","Packages"],"text":"Devon4Net.Infrastructure.Extensions\n\nMiscellaneous extension library which contains :\n\n\n\n\nObjectTypeHelper\n\n\nJsonHelper\n\n\nGuidExtension\n\n\nHttpContextExtensions\n\n\nHttpRequestExtensions\n\n\n\n\nObjectTypeHelper\n\nProvides a method for converting an instance of an object in the type of an object of a specified class name.\n\n\n\nJsonHelper (Json Serializer)\n\nSerialization is the process of transforming an objectâ€™s state into a form that can be saved or transmitted.\nDeserialization is the opposite of serialization in that it transforms a stream into an object.\nThese procedures, when combined, allow data to be stored and transferred.\n\n\n\n\n\n\n\n\nMore information about serializacion may be found in the official Microsoft documentation.\n\n\n\n\n\nThis helper is used in the devon4net components CircuitBreaker, MediatR, and RabbitMQ.\n\n\n\nGuidExtension\n\nThis class has basic methods for managing GUIDs. Some devon4net components, such as MediatR or RabbitMQ, implement it in their Backup Services.\n\n\n\nHttpContextExtensions\n\nProvides methods for managing response headers for example:\n\n\n\n\nTryAddHeader method is used on devon4Net.Infrastructure.Middleware component to add automatically response header options such authorization.\n\n\nTryRemoveHeader method is used on devon4Net.Infrastructure.Middleware component to remove automatically response header such AspNetVersion header.\n\n\n\n\n\nHttpRequestExtensions\n\nProvides methods for obtaining Culture and Language information from a HttpRequest object.\n\n\n\nConfiguration\n\nInstall the package on your solution via Package Manager Console by running the following command:\n\n\n\n\n\n\n\n\n\n"}