{"type":"doc","filename":"devonfw-guide_getting-started.wiki_getting-started.asciidoc.html","anchor":"devonfw-guide_getting-started.wiki_getting-started.asciidoc","title":"Getting Started","breadcrumbs":["Getting Started"],"text":"Getting Started\n\n\n\nHi there!\nWe’re devonfw and we’ve a goal.\nOur mission is to speed up the development of software.\nThe shared experience across software developers is that there are some major reasons for a slow development process:\n\n\n\n\nReinventing the wheel over and over again\n\n\nRepetitive work that nobody likes to do but needs to be done\n\n\nErrors that you do not find and when you found them you grab you head saying: \"We should have known that!\"\n\n\n\n\nIn devonfw we’re targeting exactly those issues by providing a shared and reusable experience base together with tools that just make your live easier.\n\n\n\n\n\n\n\nGood Practices\n\n\nThe good practices are the heart of devonfw.\nThey are divided by technology stacks, because we found out that different approaches need to be considered when using Java, .net, node.js or Angular.\nSome stacks are more concentrating on good documentation, others are focusing on reusable software components and we also provide completely bootstrapped applications that help you getting started immediately with an integrated set of good practices.\n\n\nCheck out the pages of your technology stack now!\n\n\nTools\n\n\nKnowledge and code snippets do not always help you with reoccurring tasks that need to be performed or error prone setups.\nThis is where our tools come in.\nTake a look in our tool section to find all of our defined tools. Here are some highlights you should not miss:\n\n\n\ndevonfw-ide\n\nThe devonfw-ide sets up an isolated development environment on your machine.\nAll tools you’re using are locally installed in that isolated environment, so that your installations are not conflicting with different versions from other projects.\nIf needed you can even define the look of the environment in a central space and share it with your teammates so your onboarding of new developers is rapidly speed up and a consistent development experience is guaranteed.\n\nCobiGen\n\nCobiGen is the smart generator you do not want to miss once used. Instead of generating plain files from a static model, it identifies the context from which you want to generate certain things. Image you could click on an Entity in your application and generate the repository, the TOs and the mappers out of it. CobiGen will do so.\n\nSolicitor\n\nEvery project we’ve seen in the last decades has a lot of open source software usage.\nBut the least of them keep track of the license obligations or do at all provide any kind of catalog what tools are in use.\nSolicitor creates an inventory of your software and evaluates them based on a defined rule set.\n\n\n\n\nJump In\n\n\nYou’re asking yourself now \"Wow that’s pretty cool, how can I use it?\".\nWe thought you would and prepared some Killercoda tutorials for you.\n\n\nWe recommend to start with the JumpTheQueue  scenario. You can start by following the steps of the tutorial on the github repository or with our interactive tutorial\n\n\nJumpTheQueue Killercoda Scenario\n\n\nIf you’re interested in a real world example completely build with devonfw, take a look at our sample application.\n\n\n\n\n\n\n\nWhy should I use devonfw?\n\n\nExplore Our devonfw Sample Application\n\n\nRepository Overview\n\n\nLinks to our Community\n\n\n\n\n"}