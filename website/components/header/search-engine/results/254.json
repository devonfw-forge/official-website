{"type":"doc","filename":"devonfw-guide_devon4net.wiki_architecture_guide.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_architecture_guide.asciidoc_introduction","title":"Introduction","breadcrumbs":[".net","Architecture basics","Architecture"],"text":"Introduction\n\nThe devonfw platform provides a solution to building applications which combine best-in-class frameworks and libraries as well as industry proven practices and code conventions. It massively speeds up development, reduces risks and helps you to deliver better results. When it comes to achieving these objectives, having a very clear and well-defined architecture is critical.\n\n\nThis guide will teach you the fundamentals of the suggested architecture, which is based on layers in order to develop the best possible quality software, applying design patterns, coding principles and the best practices known in the industry.\n\n\nBefore getting started, itâ€™s helpful to understand a few key ideas that will come in handy.\n\n\nWhat is code quality?\n\nQuality is a subjective concept; one person may regard something as high quality while another does not. So, how can we tell whether a piece of code is of good quaility or not?\nDifferent teams may use different definitions, based on context, but there are five common standard metrics used to measure it:\n\n\n\n\nReliability: Measures the probability of a system running without failure over a specific period of time. It relates to the number of defects and availability of the software.\n\n\nMaintainability: Measures how easily software can be maintained. It relates to the size, consistency, structure, and complexity of the codebase.\n\n\nTestability: Measures how well the software supports testing efforts. It relies on how well you can control, observe, isolate, and automate testing, among other factors.\n\n\nPortability: Measures how usable the same software is in different environments.\n\n\nReusability: Measures whether existing assets, such as code, can be used again. Assets are more easily reused if they have characteristics such as modularity or loose coupling.\n\n\n\n\n\nWhat is architecture quality?\n\nUsing a well-defined architecture is essential to ensure quality development of long-lived business applications as well as applications with complex behavior.\n\n\n\n\nScalability: Software scalability is the ability to grow or shrink a piece of software to meet changing demands on a business.\n\n\nLoose coupling: Loose coupling is an approach to interconnecting the components in a system or network so that they are weakly associated and easily replaceable.\n\n\nDeveloper friendly: A clean, structured and well-documented architecture makes reading and understanding the code much easier to developers.\n\n\n\n\n\n\n"}