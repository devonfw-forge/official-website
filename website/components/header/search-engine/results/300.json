{"type":"doc","filename":"devonfw-guide_devon4net.wiki_howto.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_howto.asciidoc_how-to-use-aws-cdk","title":"How to: Use AWS CDK","breadcrumbs":[".net","How To section","How to use devon4net"],"text":"How to: Use AWS CDK\n\nWhat is AWS CDK?\n\nAWS Cloud Development Kit (CDK) is an open-source software development framework to define your cloud application resources using familiar programming languages. This framework allows you to define all your AWS infrastructure as readable code. This process is known as Infrastructure as Code (IaC) and consists in provisioning and managing infrastructure for your software solutions through code, instead of doing so manually.\n\n\nThis means that you can easily modify, distribute and reproduce configurations. In addition, by including infrastructure as code:\n\n\n\n\nfacilitates the integration of infrastructure into version control systems for tracking changes and audit modifications.\n\n\nenables the introduction of significant automation for infrastructure management. All of these factors contribute to the SDLCâ€™s IaC being fully integrated into CI/CD pipelines.\n\n\nEliminates the unnecessary manual management.\n\n\n\n\n\nWhy CDK support in devon4net?\n\nIn a real project, we will use AWS services such as DynamoDB databases, S3 buckets, multiple lambdas, and so on.\nSimilarly, we will be working in a variety of work environments.\n\n\nDevon4Net, with the help of the CDK, allows us to treat these services as code (IaC), which allows us to take all of this service structure and replicate it in another environment that interests us, saving development time and treating this copy of your AWS services as a backup.\n\n\nIn Devon4Net, we can use a standarized json file to configure the AWS CDK service, this json will be translated into readable code for the CDK framework.\n\n\n\nHow to use\n\nInstalling the NuGet\n\nYou need to install the Devon4net.Infrastructure.AWS.CDK NuGet, for that you can run the following command in the Package Manager Console:\n\n\n\n\n\n\n\n\nConfigure your ProvisionStack\n\nIn the Startup class of your application, follow the nexts steps:\n\n\n\n\nLoad your appsettings.{environment}.json configuration file. As an example, consider the Options Pattern:\n\n\n\n\n\n\n\nOnce your setup has been charged, you may create an instance of the ProvisionStack class and then call the Process() method:\n\n\n\n\n\n\nThe Process() method is responsible for building the infrastructure that you specified in your configuration file.\n\n\n\n\n\n\n\n\nNote\n\n\nFor more information about the configuration of the component itself, please, visit the component documentation.\n\n\n\n\n\n\n\nReferences\n\nAWS CDK official documentation\n\n\n\n\n\n"}