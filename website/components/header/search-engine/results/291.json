{"type":"doc","filename":"devonfw-guide_devon4net.wiki_howto.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_howto.asciidoc_how-to-circuit-breaker-communication-with-certificates","title":"How To: Circuit breaker communication with Certificates","breadcrumbs":[".net","How To section","How to use devon4net"],"text":"How To: Circuit breaker communication with Certificates\n\nIn this section we are going to configure two services communication for using certificates, and Circuit Breaker Pattern.\n\n\n\n\n\nNote\n\n\nPlease refer to the component documentation for more information about how to configure CircuitBreaker in devon4net and other projects\n\n\n\n\n\nConfiguration\n\nWe have to setup two services in order to implement Circuit Breaker pattern, in this scenario, we’re creating a basic application that connects two services that are similar.\n\n\nServiceA\n\nIn the appsettings.{development}.json you must use the following configuration:\n\n\n\n\n\n\n\nAs an example, we call the HttpClientHandler in the controller, however it is preferable to do it in the service class:\n\n\n\n\n\n\n\nAs shown in the code above, we inject the HttpClientHandler, and on the RemotePing() function, we use the HttpClientHandler’s Send method to communicate ServiceA with ServiceB.\n\n\nThe CircuitBreaker setup method must be added to Program.cs:\n\n\n\n\n\n\n\nAlso, remember to install the certificate and add the folder containing the certificate to the project.\n\n\n\nServiceB\n\nServiceB is implemented in the same way as ServiceA. You only have to change the name of the service and the base address in the appsettings.{environment}.json, and in the controller method you must change the service name and the endpoint:\n\n\nappsettings.Development.json :\n\n\n\n\n\n\n\nPongController\n\n\n\n\n\n\n\n\n\nVideo\n\nThe preceding example is covered in detail in this video lesson:\n\n\nHow to setup Circuit Breaker with certificates\n\n\nYour browser does not support the video tag.\n\n\n\n\n\n\n"}