{"type":"doc","filename":"devonfw-guide_devon4net.wiki_packages.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_packages.asciidoc_devon4net.infrastructure.circuitbreaker","title":"Devon4Net.Infrastructure.CircuitBreaker","breadcrumbs":[".net","Packages","Packages"],"text":"Devon4Net.Infrastructure.CircuitBreaker\n\nThe Devon4Net.Infrastructure.CircuitBreaker component implements the retry pattern for HTTP/HTTPS calls. It may be used in both SOAP and REST services.\n\n\nConfiguration\n\nComponent configuration is made on file appsettings.{environment}.json as follows:\n\n\n\n\n\n\n\n\n\n\n\n\n\nProperty\nDescription\n\n\n\n\nCheckCertificate\nTrue if HTTPS is required. This is useful when developing an API Gateway needs a secured HTTP, disabling this on development we can use communications with a valid server certificate\n\n\nEndpoints\nArray with predefined sites to connect with\n\n\nName\nThe name key to identify the destination URL\n\n\nHeaders\nNot ready yet\n\n\nWaitAndRetrySeconds\nArray which determines the number of retries and the lapse period between each retry. The value is in milliseconds.\n\n\nCertificate\nCeritificate client to use to perform the HTTP call\n\n\nCertificatePassword\nThe password that you assign when exporting the certificate\n\n\nSslProtocol\nThe secure protocol to use on the call\n\n\n\n\nProtocols\n\n\n\n\n\n\n\n\nProtocol\nKey\nDescription\n\n\n\n\nSSl3\n48\nSpecifies the Secure Socket Layer (SSL) 3.0 security protocol. SSL 3.0 has been superseded by the Transport Layer Security (TLS) protocol and is provided for backward compatibility only.\n\n\nTLS\n192\nSpecifies the Transport Layer Security (TLS) 1.0 security protocol. The TLS 1.0 protocol is defined in IETF RFC 2246.\n\n\nTLS11\n768\nSpecifies the Transport Layer Security (TLS) 1.1 security protocol. The TLS 1.1 protocol is defined in IETF RFC 4346. On Windows systems, this value is supported starting with Windows 7.\n\n\nTLS12\n3072\nSpecifies the Transport Layer Security (TLS) 1.2 security protocol. The TLS 1.2 protocol is defined in IETF RFC 5246. On Windows systems, this value is supported starting with Windows 7.\n\n\nTLS13\n12288\nSpecifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.\n\n\n\n\n\n\nSetting up in Devon\n\nFor setting it up using the Devon4NetApi template just configure it in the appsettings.{environment}.json file.\n\n\nAdd it using Dependency Injection on this case we instanciate Circuit Breaker in a Service Sample Class\n\n\n\n\n\n\n\nAdd the necessary references.\n\n\n\n\n\n\n\nYou must give the following arguments to make a POST call:\n\n\n\n\n\n\n\nWhere:\n\n\n\n\n\n\n\n\nProperty\nDescription\n\n\n\n\nYourOutputClass\nThe type of the class that you are expecting to retrieve from the call\n\n\nNameOftheService\nThe key name of the endpoint provided in the appsettings.json file at Endpoints[] node\n\n\nEndPoint\nPart of the url to use with the base address. E.g: /validate\n\n\nInputData\nYour instance of the class with values that you want to use in the call\n\n\nMediaType.ApplicationJson\nThe media type flag for the call\n\n\n\n\n\nSetting up in other projects\n\nInstall the package on your solution using the Package Manager Console:\n\n\n\n\n\n\n\nnext add via Dependency Injection the circuit breaker instance.On this case we use a Service\n\n\n\n\n\n\n\nDonâ€™t forget to provide the necessary references.\n\n\n\n\n\n\n\nAnd configure CircuitBreaker in Program.cs adding the following lines:\n\n\n\n\n\n\n\nYou must add the default configuration shown in the configuration section and at this point you can use the circuit breaker functionality in your code.\n\n\nTo perform a GET call you should use your circuit breaker instance as follows:\n\n\n\n\n\n\n\nWhere:\n\n\n\n\n\n\n\n\nProperty\nDescription\n\n\n\n\nYourOutputClass\nThe type of the class that you are expecting to retrieve from the call\n\n\nNameOftheService\nThe key name of the endpoint provided in the appsettings.json file at Endpoints[] node\n\n\nEndPoint\nPart of the url to use with the base address. E.g: /validate\n\n\nInputData\nYour instance of the class with values that you want to use in the call\n\n\nMediaType.ApplicationJson\nThe media type flag for the call\n\n\n\n\n\n\n"}