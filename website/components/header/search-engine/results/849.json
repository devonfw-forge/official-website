{"type":"doc","filename":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_usage.html","anchor":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_executing-solicitor","title":"Executing Solicitor","breadcrumbs":["Tools","Solicitor User Guide","Usage"],"text":"Executing Solicitor\n\nSolicitor is a standalone Java (Spring Boot) application. Prerequisite for running it is an existing Java 8 or 11 runtime environment. If you do not yet have a the Solicitor executable JAR (solicitor.jar) you need to build it as given on the project GitHub homepage https://github.com/devonfw/solicitor .\n\n\nSolicitor is executed with the following command:\n\n\n\n\n\n\n\nwhere &lt;configfile&gt; is to be replaced by the location of the Project Configuration File.\n\n\nTo get a first idea on what Solicitor does you might call\n\n\n\n\n\n\n\nThis executes Solicitor with default configuration on it own list of internal components and produces sample output.\n\n\nTo get an overview of the available command line options use\n\n\n\n\n\n\n\n\nAdressing of resources\n\nFor unique adressing of resources to be read (configuration files, input data, rule templates and decision tables) Solicitor makes use of the Spring ResourceLoader functionality, see https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#resources-resourceloader . This allows to load from the classpath, the filesystem or even via http get.\n\n\nIf you want to reference a file in the filesystem you need to write it as follows: file:path/to/file.txt\n\n\nNote that this only applies to resources being read. Output files are adressed without that prefix.\n\n\n\n\n\n"}