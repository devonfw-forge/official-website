{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-migration-spring-quarkus.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-migration-spring-quarkus.asciidoc_transfer-objects","title":"Transfer objects","breadcrumbs":["Java","Quarkus","Migrate from Spring to Quarkus"],"text":"Transfer objects\n\nThe next step is to create the appropriate transfer objects for the entities. In a devon4j Spring application, we would use CobiGen to create these classes. Since CobiGen is not usable for this purpose in Quarkus applications yet, we have to create the classes manually.\n\n\nFirst, we create some abstract base classes for the search criteria and DTO classes. Normally, these would also be created by CobiGen.\n\n\nListing 24. AbstractSearchCriteriaTo\n\n\n\n\n\nListing 25. AbstractDto\n\n\n\n\n\nThe class AbstractTo, extended by other classes, would be provided by the devon4j-basic module in a devon4j Spring application. You can take the code from here and reuse it in your Quarkus project.\n\n\nNow you can create your transfer objects. Most of the code of the transfer objects of your Spring application should be reusable. For Quarkus, we recommend (as mentioned here) to use *Dto instead of *Eto classes. Be sure to change the names of the classes accordingly.\n\n\n\n"}