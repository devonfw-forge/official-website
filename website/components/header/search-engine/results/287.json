{"type":"doc","filename":"devonfw-guide_devon4net.wiki_howto.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_howto.asciidoc_how-to-import-a-database","title":"How to: Import a database","breadcrumbs":[".net","How To section","How to use devon4net"],"text":"How to: Import a database\n\nIn this part of the document you will learn how to easily import a database to your devon4net project or any .Net project. This process is known by a variety of different names: scaffolding, database first, reverse engineering…​ But they all refer to the process of creating entity models and/or database context automatically based on a database schema.\n\n\nPrerequisites\n\nYou can import a database in your favourite type of schema, but for this example we will be using SQL Server and Visual Studio 2022.\n\n\n\n\n\nNote\n\n\nEnsure that you have a connection ready to your database and a correct installation of Visual Studio 2022.\n\n\n\n\n\nFor this example we used Microsoft SQL Server Management Studio to create our database and provide us with a local database connection.\n\n\n\nNuGet packages installation\n\nBefore starting with the scaffolding you will need to install the following NuGet packages in your destination project.\n\n\nOpen the Package Manager Console\n\nTo open the Package Manager Console, follow the next menu steps: View &gt; Other Windows &gt; Package Manager Console and then ensure that the default project in the console is set to the destination project as shown in the next figure.\n\n\n\n\n\nNote\n\n\nIf the destination project is not the same as the startup project, you may need to install some of the packages in the startup project too. The package manager console will warn you of that if it is necessary.\n\n\n\n\n\n\n\n\nFigure 63. Package Manager Console default project\n\n\n\nInstall the packages\n\n\n\nMicrosoft.EntityFrameworkCore.Tools\n\n\n\n\n\n\n\n\n\n\n\nMicrosoft.EntityFrameworkCore.Design\n\n\n\n\n\n\n\n\n\n\n\nMIcrosoft.EntityFrameworkCore.SqlServer\n\n\n\n\nNote\n\n\nAs we mentioned we will be using a SQL Server schema, we are installing the database provider for it. Please choose your own Database Provider.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScaffolding command\n\nRun the following command to execute the scaffolding operation:\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nYour connection string and database provider may be different.\n\n\n\n\n\n\n\nThe first argument is the connection string.\n\n\nThe second argument is the Database Provider package for the used schema.\n\n\n-Tables {Table list separated by comma} is the list of the tables you want to scaffold.\n\n\n-ContextDir will specify the relative path for the context.\n\n\n-OutputDir will specify the relative path for the models.\n\n\n\n\nIn our case, before doing the scaffolding we had something like this:\n\n\n\n\n\nFigure 64. Directory tree before scaffolding\n\n\nAnd the scaffolding produced the following directory tree:\n\n\n\n\n\nFigure 65. Directory tree after scaffolding\n\n\nIf you do not specify -Tables, -ContextDir and -OutputDir all of the tables will be scaffolded and the default directories will be the project directory.\n\n\n\nAdd the context for Dependency Injection\n\nNow that we have our context we will need to add it either in Program.cs or SetupDatabase method in DevonConfiguration class.\n\n\nAs we are using Devon, we will need to go to Devon4Net.Application.WebAPI.Implementation.Configuration.DevonConfiguration and add the folowing line in SetupDatabase method:\n\n\n\n\n\n\n\nWhere:\n\n\n\n\n\n\n\n\nParameter\nDescription\n\n\n&lt;DevonDatabaseContext&gt;\nDatabase context you want to add\n\n\nconfiguration\nAvailable IConfiguration instance\n\n\n\"DevonDatabase\"\nName of the connection string defined at ConnectionString section in the appsettings.{environment}.json configuration file\n\n\nDatabaseType\nDatabase schema available in devon (see the following list).\n\n\n\n\nList of supported databases:\n\n\n\n\nSqlServer\n\n\nSqlite\n\n\nInMemory\n\n\nCosmos\n\n\nPostgreSQL\n\n\nMySql\n\n\nMariaDb\n\n\nFireBird\n\n\nOracle\n\n\nMSAccess\n\n\n\n\n\nReferences\n\n\n\nReverse Engineering - Microsoft Docs\n\n\nDatabase Providers - Microsoft Docs\n\n\n\n\n\n\n"}