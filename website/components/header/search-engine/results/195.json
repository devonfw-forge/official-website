{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-migration-spring-quarkus.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-migration-spring-quarkus.asciidoc_summary","title":"Summary","breadcrumbs":["Java","Quarkus","Migrate from Spring to Quarkus"],"text":"Summary\n\nAs you have seen, some parts hardly differ when migrating a Spring application to a Quarkus application, while other parts differ more. The above sections describe the parts needed for simple applications that provide REST services with a data access layer.\nIf you add more functionality, more customization and other frameworks, dependencies may be required. If that is the case, take a look at the corresponding guide on the topic in the devon4j documentation or check if there is a tutorial on the official Quarkus website.\n\n\nFurthermore, we can summarize that migrating from a Spring application to a Quarkus representative is not complex. Although Quarkus is a very young framework (release 1.0 was in 2019), it brings a lot of proven standards and libraries that you can integrate into your application.\nThis makes it easy to migrate and reuse code from existing (Spring) applications. Also, Quarkus comes with Spring API compatibility for many Spring modules (Spring Data JPA, Spring DI, etc.), which makes it easier for developers to reuse their knowledge.\n\n\n\n\n\n"}