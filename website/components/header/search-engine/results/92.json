{"type":"doc","filename":"devonfw-guide_devon4j.wiki_architecture.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_architecture.asciidoc_architecture-principles","title":"Architecture Principles","breadcrumbs":["Java","General","Architecture"],"text":"Architecture Principles\n\nAdditionally we define the following principles that our architecture is based on:\n\n\n\n\nComponent Oriented Design\nWe follow a strictly component oriented design to address the following sub-principles:\n\n\n\nSeparation of Concerns\n\n\nReusability and avoiding redundant code\n\n\nInformation Hiding via component API and its exchangeable implementation treated as secret.\n\n\nDesign by Contract for self-contained, descriptive, and stable component APIs.\n\n\nLayering as well as separation of business logic from technical code for better maintenance.\n\n\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise, maintenance problems will arise to ensure that data remains consistent. Therefore, interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\n\n\n\nHomogeneity\nSolve similar problems in similar ways and establish a uniform code-style.\n\n\n\n\nAs an architect you should be prepared for the future by reading the TechnoVision.\n\n\n\n"}