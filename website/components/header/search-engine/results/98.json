{"type":"doc","filename":"devonfw-guide_devon4j.wiki_coding-conventions.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_coding-conventions.asciidoc_code-documentation","title":"Code-Documentation","breadcrumbs":["Java","General","Coding Conventions"],"text":"Code-Documentation\n\nAs a general goal, the code should be easy to read and understand. Besides, clear naming the documentation is important. We follow these rules:\n\n\n\n\nAPIs (especially component interfaces) are properly documented with JavaDoc.\n\n\nJavaDoc shall provide actual value - we do not write JavaDoc to satisfy tools such as checkstyle but to express information not already available in the signature.\n\n\nWe make use of {@link} tags in JavaDoc to make it more expressive.\n\n\nJavaDoc of APIs describes how to use the type or method and not how the implementation internally works.\n\n\nTo document implementation details, we use code comments (e.g. // we have to flush explicitly to ensure version is up-to-date). This is only needed for complex logic.\n\n\nAvoid the pointless {@inheritDoc} as since Java 1.5 there is the @Override annotation for overridden methods and your JavaDoc is inherited automatically even without any JavaDoc comment at all.\n\n\n\n\n\n"}