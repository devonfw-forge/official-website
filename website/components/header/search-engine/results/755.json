{"type":"doc","filename":"devonfw-guide_ide.wiki_cli.asciidoc.html","anchor":"devonfw-guide_ide.wiki_rewrite.asciidoc","title":"rewrite","breadcrumbs":["Getting Started","Usage","Devon CLI"],"text":"rewrite\n\nThe rewrite commandlet allows the use of Openrewrite, a Maven based tool that can be used to refactor code with recipes for multiple languages and tools.\nBefore using this tool, we recommend that you read the Getting-Started page.\n\n\nUsage\n\nThe commandlet accepts the name of a recipe such as org.openrewrite.java.format.AutoFormat as the first argument.\nIf this recipe is built-in, the second argument can be ignored.\nIn case the recipe is provided by an external catalog of recipes, the second parameter must be passed.\nUsually this information is set in the pom.xml of the project in plugin dependencies:\n\n\n\n\n\n\n\nHowever, you can set up the second parameter in this structure instead: groupId:artifactId:version.\nIn the example the second parameter would be org.openrewrite.recipe:rewrite-spring:LATEST. You can also use the exact version instead of LATEST.\n\n\nThe catalog of recipes can be found here:\n\n\nhttps://docs.openrewrite.org/reference/recipes\n\n\nThe arguments (devon rewrite «args») are explained by the following table:\n\n\nUsage of devon rewrite\n\n\n\n\n\n\n\n\nArgument(s)\nMeaning\n\n\n\n\n«recipe» [«catalog»]\nrun a «recipe». If it is not a built-in recipe then provide the catalog of this recipe in [«catalog»]\"\n\n\n\n\n\n\n\n"}