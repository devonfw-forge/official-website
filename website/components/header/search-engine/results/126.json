{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-component.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-component.asciidoc_business-component","title":"Business Component","breadcrumbs":["Java","Spring","Components"],"text":"Business Component\n\nThe business-architecture defines the business components with their allowed dependencies. A small application (microservice) may just have one component and no dependencies making it simple while the same architecture can scale up to large and complex applications (from bigger microservice up to modulith).\nTailoring an business domain into applications and applications into components is a tricky task that needs the skills of an experienced architect.\nAlso, the tailoring should follow the business and not split by technical reasons or only by size.\nSize is only an indicator but not a driver of tailoring.\nWhatever hypes like microservices are telling you, never get misled in this regard:\nIf your system grows and reaches MAX+1 lines of code, it is not the right motivation to split it into two microservices of ~MAX/2 lines of code - such approaches will waste huge amounts of money and lead to chaos.\n\n\n\n"}