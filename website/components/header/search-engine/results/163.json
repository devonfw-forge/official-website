{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-jpa.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-jpa.asciidoc_security","title":"Security","breadcrumbs":["Java","General","Java Persistence API"],"text":"Security\n\nSQL-Injection\n\nA common security threat is SQL-injection. Never build queries with string concatenation or your code might be vulnerable as in the following example:\n\n\n\n\n\n\n\nVia the parameter userInput an attacker can inject SQL (JPQL) and execute arbitrary statements in the database causing extreme damage.\n\n\nIn order to prevent such injections you have to strictly follow our rules for queries:\n\n\n\n\nUse named queries for static queries.\n\n\nUse QueryDSL for dynamic queries.\n\n\nPlease also consult the SQL Injection Prevention Cheat Sheet.\n\n\n\n\n\nLimited Permissions for Application\n\nWe suggest that you operate your application with a database user that has limited permissions so he can not modify the SQL schema (e.g. drop tables). For initializing the schema (DDL) or to do schema migrations use a separate user that is not used by the application itself.\n\n\n\n\n\n"}