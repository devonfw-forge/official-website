{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-sql.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-sql.asciidoc_naming-conventions","title":"Naming Conventions","breadcrumbs":["Java","General","SQL"],"text":"Naming Conventions\n\nHere we define naming conventions that you should follow whenever you write SQL files:\n\n\n\n\nAll SQL-Keywords in UPPER CASE\n\n\nIndentation should be 2 spaces as suggested by devonfw for every format.\n\n\n\n\nDDL\n\nThe naming conventions for database constructs (tables, columns, triggers, constraints, etc.) should be aligned with your database product and their operators.\nHowever, when you have the freedom of choice and a modern case-sensitive database, you can simply use your code conventions also for database constructs to avoid explicitly mapping each and every property (e.g. RestaurantTable vs. RESTAURANT_TABLE).\n\n\n\n\nDefine columns and constraints inline in the statement to create the table\n\n\nIndent column types so they all start in the same text column\n\n\nConstraints should be named explicitly (to get a reasonable hint error messages) with:\n\n\n\nPK_«table» for primary key (name optional here as PK constraint are fundamental)\n\n\nFK_«table»_«property» for foreign keys («table» and «property» are both on the source where the foreign key is defined)\n\n\nUC_«table»_«property»[_«propertyN»]* for unique constraints\n\n\nCK_«table»_«check» for check constraints («check» describes the check, if it is defined on a single property it should start with the property).\n\n\n\n\n\nOld RDBMS had hard limitations for names (e.g. 30 characters). Please note that recent databases have overcome this very low length limitations. However, keep your names short but precise and try to define common abbreviations in your project for according (business) terms. Especially do not just truncate the names at the limit.\n\n\nIf possible add comments on table and columns to help DBAs understanding your schema. This is also honored by many tools (not only DBA-tools).\n\n\n\n\nHere is a brief example of a DDL:\n\n\n\n\n\n\n\nATTENTION: Please note that TABLE and ORDER are reserved keywords in SQL and you should avoid using such keywords to prevent problems.\n\n\n\nData\n\nFor insert, update, delete, etc. of data SQL scripts should additionally follow these guidelines:\n\n\n\n\nInserts always with the same order of columns in blocks for each table.\n\n\nInsert column values always starting with ID, MODIFICATION_COUNTER, [DTYPE, ] …​\n\n\nList columns with fixed length values (boolean, number, enums, etc.) before columns with free text to support alignment of multiple insert statements\n\n\nPro Tip: Get familiar with column mode of advanced editors such as notepad++ when editing large blocks of similar insert statements.\n\n\n\n\n\n\n\n\n\nSee also Database Migrations.\n\n\n\n\n\n\n\n"}