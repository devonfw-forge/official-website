{"type":"doc","filename":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_reporting-and-creating-output-documents.html","anchor":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_sql-transformation-and-filtering","title":"SQL transformation and filtering","breadcrumbs":["Tools","Solicitor User Guide","Reporting and Creating output documents"],"text":"SQL transformation and filtering\n\nDatabase structure\n\nAfter the business rules have been processed (or a Solicitor data model has been loaded via\ncommand line option -l) the model data is stored in a dynamically created internal SQL database.\n\n\n\n\nFor each type of model object a separate table is created. The tablename is the name of model object type written in uppercase characters. (E.g. type NormalizedLicense stored in table NORMALIZEDLICENSE)\n\n\nAll properties of the model objects are stored as strings in fields named like the properties within the database table. Field names are case sensitive (see note below for handling this in SQL statements).\n\n\nAn additional primary key is defined for each table, named ID_&lt;TABLENAME&gt;.\n\n\nFor all model elements that belong to some parent in the object hierarchy (i.e. all objects except ModelRoot) a foreign key field is added named PARENT_&lt;TABLENAME&gt; which contains the unique key of the corresponding parent\n\n\n\n\n\nSQL queries for filtering and transformation\n\nEach Writer configuration (see Writers and Reporting) includes a section which references SQL select statements that are applied on the database data. The result of the SQL select statements is made accessible for the subsequent processing of the Writer via the dataTable name given in the configuration.\n\n\n\nPostprocessing of data selected from the database tables\n\nBefore the result of the SQL select statement is handed over to the Writer the following postprocessing\nis done:\n\n\n\n\na rowCount column is added to the result which gives the position of the entry in the result set (starting with 1).\n\n\nColumns named ID_&lt;TABLENAME&gt; are replaced with columns named OBJ_&lt;TABLENAME&gt;. The fields of those columns are filled with the corresponding original model objects (java objects).\n\n\n\n\n\n\n\n\n\n\nThe result table column OBJ_&lt;TABLENAME&gt; gives access to the native Solicitor data model (java objects), e.g. in the Velocity writer. As this breaks the decoupling done via the SQL database using this feature is explicitely discouraged. It should only be used with high caution and in exceptional situations. The feature might be discontinued in future versions without prior notice.\n\n\n\n\n\n\n\n"}