{"type":"doc","filename":"devonfw-guide_devonfw-github_contributing.asciidoc_using-github.html","anchor":"devonfw-guide_devonfw-github_contributing.asciidoc_definition-of-done","title":"Definition of Done","breadcrumbs":["Contributing","Contributing","Using GitHub"],"text":"Definition of Done\n\nTo complete your changes ensure the following aspects:\n\n\n\n\nYou have tested your changes and the build succeeds.\n\n\nCode and documentation are in sync (if you coded new features you also extended documentation, etc.).\n\n\nYou followed the coding conventions and documentation guidelines.\n\n\nFor new features you have added automated unit tests.\n\n\n\n\nDo not worry; we will assist you in case you are unsure or missed out on something.\nHowever, you make your and our life easier, if you follow this Definition of Done (DoD) before providing your pull request.\n\n\nPlease ensure the following aspects:\n\n\n\n\nWhen selecting a title for your pull request, follow the same conventions that apply to commit messages.\n\n\nAlso add the related issue(s) to the description of the pull request (e.g. fixes #«issue-id»).\n\n\nIf you are providing a PR that is not yet ready for merging, please use GitHub’s draft pull request feature:\n\n\n\nExpand the drop-down menu of the green Create Pull Request button and select Create Draft Pull Request\n\n\nYou can make further code changes to your PR by pushing commits to the corresponding feature branch.\n\n\nWhen you’re ready to get feedback on your PR, click the Ready for review button.\n\n\n\n\n\nIf you are providing a PR that is ready for merging, click on the green Create Pull Request button.\n\n\n\n\nYour pull request will automatically be checked for these requirements:\n\n\n\n\nCan be merged without conflicts.\n\n\nBuilds correctly (no compile or test errors).\n\n\nCLA has been signed. If you contribute for the first time, you need to sign the CLA once.\n\n\n\n\nPlease ensure to do the required tasks and reworks unless all checks are satisfied.\nFrom here a reviewer should take over and give feedback.\nIn the best case, your contribution gets merged and everything is completed.\nYou might also get review feedback and requests for changes.\nIn that case walk through the review feedback and try to resolve it.\nOnce you push your new commits, the PR gets updated automatically and all checks will verify again.\nAlso GitHub will automatically make resolved review comments as outdated.\nIf you do not plan to put any further work into your PR before it is completed and merged, please let us know by writing an according comment.\nWe might find resources to get the PR done for you if it is already valuable.\nIn case you should not get feedback for weeks, do not hesitate to ask the community.\n\n\n\n\n\n\n\n\nIf one (typically the reviewer) has to change the base branch (because the wrong develop branch was used, see above) onto which the changes will be merged, one can do the same by following the instructions at here.\n\n\n\n\n\n\n\n\n"}