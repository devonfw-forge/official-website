{"type":"doc","filename":"devonfw-guide_general_release-notes-version-2020.08.asciidoc_my-thai-star-with-microservices-and-istio-service-mesh-implementation.html","anchor":"devonfw-guide_general_release-notes-version-2020.08.asciidoc_my-thai-star-with-microservices-and-istio-service-mesh-implementation","title":"My Thai Star with Microservices and ISTIO Service Mesh Implementation","breadcrumbs":["Release Notes","devonfw Release notes 2020.08","My Thai Star with Microservices and ISTIO Service Mesh Implementation"],"text":"My Thai Star with Microservices and ISTIO Service Mesh Implementation\n\nAs always, our reference application, My Thai Star now has been implemented with Microservices and ISTIO Service Mesh features:\n\n\n\n\ndevon4j - Java\n\n\n\nMy Thai Star now has a sample version on Microservices architecture.\n\n\nThe github repository for the microservices version of My Thai Star is hosted at My Thai Star with Microservices\n\n\nMy Thai Star Microservices now has a multi stage docker build which generates the respective docker images for all the My Thai Star services.\n\n\nMy Thai Star microservices has the Kubernetes artifacts available to be able to deploy into Kubernetes pods.\n\n\nMy Thai Star microservices has ISTIO the service mesh implementation.\n\n\nCheck out the guides to implement or configure ISTIO features such as Traffic Routing, Network Resiliency features(RequestRouting, RequestTimeouts, Fault Injection, Circuit Breaker), Canary Deployments.\n\n\n\n\n\n\n\n\n\n"}