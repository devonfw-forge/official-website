{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-logging.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-logging.asciidoc_json-logging","title":"JSON-logging","breadcrumbs":["Java","General","Logging"],"text":"JSON-logging\n\nFor easy integration with log-monitoring, we recommend that your app logs to standard out in JSON following JSON Lines.\n\n\nIn Spring applications, this can be achieved via logstash-logback-encoder (see dependencies). In Quarkus, it can be easily achieved using the quarkus-logging-json extension (see here for more details).\n\n\nThis will produce log-lines with the following format (example formatted for readability):\n\n\n\n\n\n\n\nAdding custom values to JSON log with Logstash\n\nThe JSON encoder even supports logging custom properties for your log-monitoring.\nThe trick is to use the class net.logstash.logback.argument.StructuredArguments for adding the arguments to you log message, e.g.\n\n\n\n\n\n\n\nThis will produce the a JSON log-line with the following properties:\n\n\n\n\n\n\n\nAs you can quickly see besides the human readable message you also have the structured properties url, status and duration that can be extremly valuable to configure dashboards in your log-monitoring that visualize success/failure ratio as well as performance of your requests.\n\n\n\n\n"}