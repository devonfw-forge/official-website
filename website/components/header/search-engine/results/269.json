{"type":"doc","filename":"devonfw-guide_devon4net.wiki_codeconvention.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_codeconvention.asciidoc_general-coding-style","title":"General coding style","breadcrumbs":[".net","Coding conventions","Code conventions"],"text":"General coding style\n\n\n\nSource files: One namespace and one class per code file.\n\n\nBraces: On new line. Always use braces when optional.\n\n\n\n\n\n\n\n\n\n\n\nIndention: Use tabs with size of 4.\n\n\nComments:\n\n\n\n Use // for simple comment or /// for summaries.\n\n\n Do not use /* â€¦ */ and do not flower box.\n\n\n\n\n\nUse built-in C# native data types instead of .NET Common Type System (CTS) types (string instead of String)\n\n\nAvoid changing default type in Enums.\n\n\nUse base or this only in constructors or within an override.\n\n\nAlways check for null before invoking events.\n\n\nAvoid using Finalize. Use C# Destructors and do not create Finalize() method.\n\n\nSuggestion: Use blank lines, to make it much more readable by dividing it into small, easy-to-digest sections:\n\n\n\nUse a single blank line to separate logical groups of code, such as control structures.\n\n\nUse two blank lines to separate method definitions\n\n\n\n\n\nAvoid long code lines when possible to make reading much more easier:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCase\nConvention\n\n\n\n\nSource File\nPascal case. Match class name and file name\n\n\nNamespace\nPascal case\n\n\nClass\nPascal case\n\n\nInterface\nPascal case\n\n\nGenerics\nSingle capital letter (T or K)\n\n\nMethods\nPascal case (use a Verb or Verb+Object)\n\n\nPublic field\nPascal case\n\n\nPrivate field\nCamel case with underscore (_) prefix\n\n\nStatic field\nPascal case\n\n\nProperty\nPascal case. Try to use get and and set convention {get;set;}\n\n\nConstant\nPascal case\n\n\nEnum\nPascal case\n\n\nVariable (inline)\nCamel case\n\n\nParam\nCamel case\n\n\n\n\n\n"}