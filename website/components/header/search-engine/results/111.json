{"type":"doc","filename":"devonfw-guide_devon4j.wiki_devon4j.asciidoc_tutorials.html","anchor":"devonfw-guide_devon4j.wiki_tutorial-newapp.asciidoc","title":"Creating a new application","breadcrumbs":["Java","Spring","Tutorials"],"text":"Creating a new application\n\nRunning the archetype\n\nIn order to create a new application you must use the archetype provided by devon4j which uses the maven archetype functionality.\n\n\nTo create a new application, you should have installed devonfw IDE. Follow the devon ide documentation to install\nthe same.\nYou can choose between 2 alternatives, create it from command line or, in more visual manner, within eclipse.\n\n\nFrom command Line\n\nTo create a new devon4j application from command line, you can simply run the following command:\n\n\n\n\n\n\n\nFor low-level creation you can also manually call this command:\n\n\n\n\n\n\n\nAttention: The archetypeVersion (first argument) should be set to the latest version of devon4j. You can easily determine the version from this badge:\n\n\n\nFurther providing additional properties (using -D parameter) you can customize the generated app:\n\n\nTable 47. Options for app template\n\n\n\n\n\n\n\nproperty\ncomment\nexample\n\n\n\n\ndbType\nChoose the type of RDBMS to use (hana, oracle, mssql, postgresql, mariadb, mysql, etc.)\n-DdbTpye=postgresql\n\n\nbatch\nOption to add an batch module\n-Dbatch=batch\n\n\n\n\n\nFrom Eclipse\n\n\n\n\n\n\n\n\nCreate a new Maven Project.\n\n\nChoose the devon4j-template-server archetype, just like the image.\n\n\n\n\n\n\n\n\n\n\n\nFill the Group Id, Artifact Id, Version and Package for your project.\n\n\n\n\n\n\n\n\n\n\n\nFinish the Eclipse assistant and you are ready to start your project.\n\n\n\n\n\n\nWhat is generated\n\nThe application template (archetype) generates a Maven multi-module project. It has the following modules:\n\n\n\n\napi: module with the API (REST service interfaces, transferobjects, datatypes, etc.) to be imported by other apps as a maven dependency in order to invoke and consume the offered (micro)services.\n\n\ncore: maven module containing the core of the application.\n\n\nbatch: optional module for batch(es)\n\n\nserver: module that bundles the entire app (core with optional batch) as a WAR file.\n\n\n\n\nThe toplevel pom.xml of the generated project has the following features:\n\n\n\n\nProperties definition: Spring-boot version, Java version, etc.\n\n\nModules definition for the modules (described above)\n\n\nDependency management: define versions for dependencies of the technology stack that are recommended and work together in a compatible way.\n\n\nMaven plugins with desired versions and configuration\n\n\nProfiles for test stages\n\n\n\n\n\nHow to run your app\n\nRun app from IDE\n\nTo run your application from your favourite IDE, simply launch SpringBootApp as java application.\n\n\n\nRun app as bootified jar or war\n\nMore details are available here.\n\n\n\n\n\n\n\n"}