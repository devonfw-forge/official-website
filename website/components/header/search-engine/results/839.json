{"type":"doc","filename":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_experimental-scancode-integration.html","anchor":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_detailed-workflow","title":"Detailed workflow","breadcrumbs":[],"text":"Detailed workflow\n\nSolicitor 1st run\n\nExecute Solicitor in a classic way. As part of the report creation step this will generate two scripts:\n\n\n\n\noutput/scancode_PROJECTNAME.sh (for downloading the sources, also calls scancodeScan.sh)\n\n\noutput/scancodeScan.sh (for running ScanCode on the downloaded sources)\n\n\n\n\nScripts will include all ApplicationComponents with exception of those where normalizedLicenseType was set to COMMERCIAL.\n\n\n\nDownload Sources and run Scancode\n\nChange to directory output and execute sh scancode_PROJECTNAME.sh.\nThis will download all sources and process them via ScanCode.\nThis might take several hours to complete.\nResults are stored in subdirectory Source of the directory output and is organized in a tree structure given by the PackageURL of the ApplicationComponents.\n\n\nOrigin file\n\nThe Scancode integration scripts try to download ApplicationComponent sources from default URLs derived from the PackageUrl (e.g. Maven Central). In cases where the sources are not available at these locations, the download will fail (and the subsequent source scan will be skipped). In this case it is possible to manually download the sources from some other location and store it in the directory structure. Restarting the Scancode integration script might then perform the source scan.\n\n\nTo be able to document the (non default) origin of the ApplicationComponent sources a file origin.yaml is created in the components directory in the file system. If the failed source download has been performed manually it is possible to edit this file and correct the data given in this file.\n\n\n\n\n\n\n\n\n\n1\nURL for downloading the sources - will be available as property ApplicationComponent.sourceDownloadUrl in the Solicitor data model.\n\n\n2\nURL for downloading the binaries - will be available as property ApplicationComponent.packageDownloadUrl in the Solicitor data model.\n\n\n\n\nThe content of the file origin.yaml currently just affects the above given two properties, it does not affect the downloading of sources by the scripts.\n\n\n\n\nSolicitor 2nd run\n\nExecute Solicitor a second time.\nAfter reading the component/license information from the Readers (but before starting the rule engine)\nSolicitor will try to look up ScanCode information from the directory tree in output/Sources for all processed ApplicationComponents. If information is found for an ApplicationComponent the following is done:\n\n\n\n\nLicense information (including URL of license text) as obtained from the Readers is replaced by the license info found by ScanCode\n\n\nCopyrights are taken from ScanCode results\n\n\nInfo on NOTICE file is taken from the ScanCode results\n\n\nIf the ScanCode results contain information about project URLs this is stored as sourceRepoUrl and/or ossHomepage\n\n\nsourceDownloadUrl  and packageDownloadUrl are set to the values given in file origin.yaml\n\n\n\n\n\nOutput\n\nMain target of the additional information obtained from ScanCode is currently the new report Attributions_PROJECTNAME.html which lists\n\n\n\n\nall ApplicationComponents (excluding those which are not OSS licensed)\n\n\nwith all found copyrights\n\n\nand all licenses\n\n\nincluding all different license texts\n\n\nand contents of all found NOTICE files\n\n\n\n\n\n\n"}