{"type":"doc","filename":"devonfw-guide_devon4net.wiki_packages.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_packages.asciidoc_devon4net.infrastructure.aws.s3","title":"Devon4Net.Infrastructure.AWS.S3","breadcrumbs":[".net","Packages","Packages"],"text":"Devon4Net.Infrastructure.AWS.S3\n\nThis component is part of the AWS Stack in Devon4Net. It has the necessary classes to manage Amazon Simple Storage Service (S3).\n\n\nProviding durability, availability, scalability and optimal performance, amazon simple storage service gives you the oportunity to store any type of object, which allows you to use it for any purpose you want, it being backups, storage for internet applications, data lakes for analytics. Amazon S3 provides management features so that you can optimize, organize, and configure access to your data to meet your specific business, organizational, and compliance requirements.\n\n\nIn S3 objects consist of data, a unique key and some information in the form of metadata. This objects are stored in buckets. A bucket is a container for objects stored in Amazon S3. You can store any number of objects in a bucket and have many buckets in your account.\n\n\nIn the NuGet package you have a handler available with a number of different methods that will help you manage your buckets and store and retrieve objects from them. The IAwsS3Handler interface  and AwsS3Handler implementation provides you with some syncrhonous and asynchronous operations like the following:\n\n\n\n\n\n\n\n\n\nReturns\nMethod\nDescription\n\n\nTask&lt;Stream&gt;\nGetObject(string bucketName, string objectKey)\nRetreives an object from an S3 bucket by its key.\n\n\nTask&lt;bool&gt;\nUploadObject(Stream streamFile, string keyName, string bucketName, string contentType, bool autoCloseStream = false, List&lt;Tag&gt; tagList = null)\nUploads an object to a bucket.\n\n\n\n\nSet up in devon\n\nFor using it in a devon project you only need to inject the class AwsS3Handler provided with the package or create an instance. The handler instance will need the region, the secret key id and the secret key to be linked to your account.\n\n\nThere is no configuration class for the component so you will need to do something similar to the following in your startup project if you want to use it via depencency injection:\n\n\n\n\n\n\n\n\nSet up in other projects\n\nFor setting it up in other projects you will need to install the package:\n\n\n\n\n\n\n\nAnd then you can start using via dependency injection or by creating instances as shown in the previous section.\n\n\n\nReferences\n\n\n\nWhat is Amazon S3? - AWS Docs\n\n\n\n\n\n\n"}