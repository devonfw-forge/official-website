{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-configuration.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-configuration.asciidoc_externalized-configuration","title":"Externalized Configuration","breadcrumbs":["Java","General","Configuration"],"text":"Externalized Configuration\n\nExternalized configuration is a configuration that is provided separately to a deployment package and can be maintained undisturbed by re-deployments.\n\n\nEnvironment Configuration\n\nThe environment configuration contains configuration parameters (typically port numbers, host names, passwords, logins, timeouts, certificates, etc.) specific for the different environments. These are under the control of the operators responsible for the application.\n\n\nThe environment configuration is maintained in application.properties files, defining various properties.\nThese properties are explained in the corresponding configuration sections of the guides for each topic:\n\n\n\n\npersistence configuration (for Spring see here, for Quarkus see here)\n\n\nservice configuration\n\n\nlogging guide\n\n\n\n\nMake sure your properties are thoroughly documented by providing a comment to each property. This inline documentation is most valuable for your operating department.\n\n\nMore about structuring your application.properties files can be read here for Spring.\n\n\nFor Quarkus, please refer to Quarkus Config Reference for more details.\n\n\n\nBusiness Configuration\n\nOften applications do not need business configuration. In case they do it should typically be editable by administrators via the GUI. The business configuration values should therefore be stored in the database in key/value pairs.\n\n\nTherefore we suggest to create a dedicated table with (at least) the following columns:\n\n\n\n\nID\n\n\nProperty name\n\n\nProperty type (Boolean, Integer, String)\n\n\nProperty value\n\n\nDescription\n\n\n\n\nAccording to the entries in this table, an administrative GUI may show a generic form to modify business configuration. Boolean values should be shown as checkboxes, integer and string values as text fields. The values should be validated according to their type so an error is raised if you try to save a string in an integer property for example.\n\n\nWe recommend the following base layout for the hierarchical business configuration:\n\n\ncomponent.[subcomponent].[subcomponent].propertyname\n\n\n\n\n"}