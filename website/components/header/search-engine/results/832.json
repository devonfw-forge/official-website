{"type":"doc","filename":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_introduction.html","anchor":"devonfw-guide_solicitor.wiki_master-solicitor.asciidoc_introduction","title":"Introduction","breadcrumbs":["Tools","Solicitor User Guide","Introduction"],"text":"Introduction\n\nTodays software projects often make use of large amounts of Open Source software. Being\ncompliant with the license obligations of the used software components is a prerequisite for every such project. This results in different requirements that the project might need to fulfill. Those requirements can be grouped into two main categories:\n\n\n\n\nThings that need to be done to actually fulfill license obligations\n\n\nThings that need to be done to monitor / report fulfillment of license obligations\n\n\n\n\nMost of the above activities share common points:\n\n\n\n\nThe need to have an inventory of used (open source) components and their licenses\n\n\nSome rule based evaluation and reporting based on this inventory\n\n\n\n\nWhile working on these easy looking tasks, they might get complex due to various aspects:\n\n\n\n\nThe number of open source components might be quite large (&gt;&gt; 100 for a typical webapplication based on state of the art programming frameworks)\n\n\nAgile development and rapid changes of used components result in frequent changes of the inventory\n\n\nOpen Source usage scenarios and license obligations might be OK in one context (e.g. in the relation between a software developer and his client) but might be completely inacceptable in another context (e.g. when the client distributes the same software to end customers)\n\n\nLegal interpretation of license conditions often differ from organisation to organisation and result in different compliance rules to be respected.\n\n\nLicense information for components is often not available in a standardized form which would allow automatic processing\n\n\nTools for supporting the license management processes are often specific to a technology or build tool and do not support all aspects of OSS license management.\n\n\n\n\nOf course there are specific commercial tool suites which address the IP rights and license domain. But due to high complexity and license costs those tools are out of reach for most projects - at least for permanent use.\n\n\nSolicitor tries to address some of the issues hightlighted above. In its initial version it is a tool for programmatically executing a process which was originally defined as an Excel-supported manual process.\n\n\nWhen running Solicitor three subsequent processing steps are executed:\n\n\n\n\nCreating an initial component and license inventory based on technology specific input files\n\n\nRule based normalization and evaluation of licenses\n\n\nGeneration of output documents\n\n\n\n\n\n\n\n\n\n\nSolicitor comes with a set of sample rules for the normalization and evaluation of licenses.\nEven though these included rules are not \"intentionally wrong\" they are only samples and you should never rely on these builtin rules without checking and possibly modifying their content and consulting your lawyer.\nSolicitor is a tool for technically supporting the management of OSS licenses within your project.\nSolicitor neither gives legal advice nor is a replacement for a lawyer.\n\n\n\n\n\n"}