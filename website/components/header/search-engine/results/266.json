{"type":"doc","filename":"devonfw-guide_devon4net.wiki_codeconvention.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_codeconvention.asciidoc_names-of-assemblies-and-dlls","title":"Names of Assemblies and DLLs","breadcrumbs":[".net","Coding conventions","Code conventions"],"text":"Names of Assemblies and DLLs\n\nAn assembly is the unit of deployment and identity for managed code programs. Although assemblies can span one or more files, typically an assembly maps one-to-one with a Dynamic Link Library (DLL). A DLL is a library that contains code and data that can be used by more than one program at the same time.\n\n\nThis section describes DLL naming conventions, which then can be mapped to assembly naming conventions.\n\n\n Choose names for your assembly DLLs that suggest large chunks of functionality, such as System.Data.\n\n\nAssembly and DLL names donâ€™t have to correspond to namespace names, but it is reasonable to follow the namespace name when naming assemblies. A good rule of thumb is to name the DLL based on the common prefix of the assemblies contained in the assembly. For example, an assembly with two namespaces, MyCompany.MyTechnology.FirstFeature and MyCompany.MyTechnology.SecondFeature, could be called MyCompany.MyTechnology.dll.\n\n\n Consider naming DLLs according to the following pattern:\n\n\n&lt;Company&gt;.&lt;ComponentClause1&gt;.&lt;ComponentClauseN&gt;.dll\n\n\n\n"}