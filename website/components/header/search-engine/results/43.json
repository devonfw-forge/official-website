{"type":"doc","filename":"devonfw-guide_cobigen.wiki_master-cobigen.asciidoc_cobigen-cli.html","anchor":"devonfw-guide_cobigen.wiki_howto_Cobigen-CLI-generation.asciidoc","title":"CobiGen CLI","breadcrumbs":["Tools","CobiGen — Code-based incremental Generator","CobiGen CLI"],"text":"CobiGen CLI\n\nThe command line interface (CLI) for CobiGen enables the generation of code using few commands. This feature allows us to decouple CobiGen from Eclipse.\n\n\nInstall CobiGen CLI\n\nIn order to install the CobiGen CLI you will need to use the devonfw/ide. In a console run devon cobigen.\n\n\n\nCommands and options\n\nUsing the following command and option you will be able to customize your generation as follows:\n\n\n\n\ncobigen, cg:  Main entry point of the CLI. If no arguments are passed, man page will be printed.\n\n\n[generate, g]: Command used for code generation.\n\n\n\nInputGlob: Glob pattern of the input file or the whole path of the input file from which the code will be generated.\n\n\n&lt; --increment, -i &gt;  : Specifies an increment ID to be generated. You can also search increments by name and CobiGen will output the resultant list. If an exact match found, code generation will happen.\n\n\n&lt; --template, -t &gt; : specifies a template ID to be generated. You can also search templates by name and CobiGen will output the resultant list.\n\n\n&lt; --outputRootPath, -out &gt;: The project file path in which you want to generate your code. If no output path is given, CobiGen will use the project of your input file.\n\n\n\n\n\n[adapt-templates, a]: Generates a new templates folder next to the CobiGen CLI and stores its location inside a configuration file. After executing this command, the CLI will attempt to use the specified Templates folder.\n\n\n&lt; --verbose, -v &gt; : Prints debug information, verbose log.\n\n\n&lt; --help, -h &gt; : Prints man page.\n\n\n&lt; update, u&gt; : This command compare the artificial pom plug-ins version with central latest version available and user can update any  outdated plug-ins version .\n\n\n\n\n\nCLI Execution steps:\n\nCobiGen CLI is installed inside your devonfw distribution. In order to execute it follow the next steps:\n\n\n\n\nRun console.bat, this will open a console.\n\n\nExecute cobigen or cg and the man page should be printed.\n\n\nUse a valid CobiGen input file and run cobigen generate &lt;pathToInputFile&gt;. Note: On the first execution of the CLI, CobiGen will download all the needed dependencies, please be patient.\n\n\nA list of increments will be printed so that you can start the generation.\n\n\n\n\nPreview of the man page for generate command:\n\n\n\n\n\n\n\n\nExamples\n\nA selection of commands that you can use with the CLI:\n\n\n\n\ncobigen generate foo\\bar\\EmployeeEntity.java: As no output path has been defined, CobiGen will try to find the pom.xml of the current project in order to set the generation root path.\n\n\ncobigen generate foo\\bar\\*.java --out other\\project: Will retrieve all the Java files on that input folder and generate the code on the path specified by --out.\n\n\ncg g foo\\bar\\webServices.yml --increment TO: Performs a string search using TO and will print the closest increments like in the following image:\n\n\n\n\n\n\n\n\n\n\n\ncg g foo\\bar\\webServices.yml -i 1,4,6: Directly generates increments with IDs 1, 4 and 6. CobiGen will not request you any other input.\n\n\ncg a: Downloads the latest CobiGen_Templates and unpacks them next to the CLI. CobiGen will from now on use these unpacked Templates for generation.\n\n\ncg a -cl C:\\my\\custom\\location: Downloads the latest CobiGen_Templates and unpacks them in C:\\my\\custom\\location. CobiGen will from now on use these unpacked Templates for generation.\n\n\n\n\n\nCLI update command\n\nExample of Update Command :\n\n\n\n\n\n\n\nSelect the plug-ins which you want to update like below :\n\n\n\n\n\n\n\n\nCLI custom templates\n\nTo use custom templates, it’s necessary to set up a custom configuration path as described here.\n\n\n\nTroubleshooting\n\nWhen generating code from a Java file, CobiGen makes use of Java reflection for generating templates. In order to do that, the CLI needs to find the compiled source code of your project.\n\n\nIf you find an error like Compiled class foo\\bar\\EmployeeEntity.java has not been found, it means you need to run mvn clean install on the input project so that a new target folder gets created with the needed compiled sources.\n\n\n\n\n\n"}