{"type":"doc","filename":"devonfw-guide_devon4net.wiki_packages.asciidoc.html","anchor":"devonfw-guide_devon4net.wiki_packages.asciidoc_devon4net.infrastructure.aws.dynamodb","title":"Devon4Net.Infrastructure.AWS.DynamoDb","breadcrumbs":[".net","Packages","Packages"],"text":"Devon4Net.Infrastructure.AWS.DynamoDb\n\nThis component is part of the AWS Stack in Devon4Net. It has the necessary classes to configure the connection with the AWS Cloud.\n\n\nKey Classes\n\nThis section will provide a brief overview of the component’s most important classes. The component has the following structure:\n\n\n\n\n\nFigure 144. Structure of the DynamoDb component\n\n\n\n\nCommon: This folder contains the classes that allow us to use the DynamoDB query and scan methods.\n\n\nConstants: Contains the DynamoDbGeneralObjectStorageAttributes class, which defines generic DynamoDb object attributes that we can use in our application.\n\n\nConverters: Folder containing a Nullable Date Converter, which is used to convert values to make them compatible with the DynamoDB database. It makes use of the IPropertyConverter interface from the AWSSDK.DynamoDBv2 package.\n\n\nDomain: This folder contains the different repositories that we will explain in more detail in the following section.\n\n\nExtensions: It includes a JSON Helper for performing operations like serialization and deserialization.\n\n\n\n\nEntity Repository (DynamoDbEntityRepository.cs)\n\nIt works with the object persistence programming model.\nThis model is specifically designed for storing, loading, and querying .NET objects in DynamoDB. You may access this model through the Amazon.DynamoDBv2.DataModel namespace.\nIs the easiest to code against whenever you are storing, loading, or querying DynamoDB data.\nIt makes use of annotations to define the tables and their properties.\n\n\n\nTable Repository (DynamoDbTableRepository.cs)\n\nIt uses a low-level model to manage objects directly and converts .Net data types to their DynamoDB equivalents\n\n\nIt includes methods for searching, updating, and deleting database data.\n\n\n\nDynamo Search Criteria (DynamoSearchCriteria.cs)\n\nDynamoDB provides two kinds of read operations: query and scan.\n\n\nA query operation uses either the primary key or the index key to find information.\nScan is a read call that, as the name suggests, scans the entire table for a specific result.\nScan operations are less efficient than Query operations.\n\n\n\n\n\n\n\n\nIn the 'How to: AWS DynamoDB' documentation, you can find examples of how to use the repositories and search methods.\n\n\n\n\n\n\n\nConfiguration\n\nThe following configuration is for AWS in general and can be done in appsettings.{environment}.json file as follows:\n\n\n\n\n\n\n\n\n\nUseSecrets: Boolean that indicates if AWS Secrets Manager is being used.\n\n\nUseParameterStore: Boolean to indicate if AWS Parameter Store is being used.\n\n\nCredentials: Credentials for connecting with AWS.\n\n\n\nProfile: A collection of settings is called a profile. This would be the name for the current settings.\n\n\nRegion: AWS Region whose servers you want to send your requests to by default. This is typically the Region closest to you.\n\n\nAccessKeyId: Access key ID portion of the keypair configured to access your AWS account.\n\n\nSecretAccessKey: Secret access key portion of the keypair configured to access your AWS account.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccess keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. If you don’t have access keys, you can create them from the AWS Management Console.\n\n\n\n\n\n\nSet up in devon\n\nFor using it in a devon4net project, you could very easily do it by using the template.\n\n\n\n\n\n\n\n\nRead the template documentation to learn more about it.\n\n\n\n\n\n\nSet up in other projects\n\nInstall the package on your solution using the Package Manager Console:\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlease see the 'How to: AWS DynamoDB' documentation for more information and examples of how to use the component.\n\n\n\n\n\n\n\n"}