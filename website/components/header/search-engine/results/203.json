{"type":"doc","filename":"devonfw-guide_devon4j.wiki_guide-rest.asciidoc.html","anchor":"devonfw-guide_devon4j.wiki_guide-rest.asciidoc_urls","title":"URLs","breadcrumbs":["Java","General","REST"],"text":"URLs\n\nURLs are not case sensitive. Hence, we follow the best practice to use only lower-case-letters-with-hyphen-to-separate-words.\nFor operations in REST we distinguish the following types of URLs:\n\n\n\n\nA collection URL is build from the rest service URL by appending the name of a collection. This is typically the name of an entity. Such URL identifies the entire collection of all elements of this type. Example: https://mydomain.com/myapp/services/rest/mycomponent/v1/myentity\n\n\nAn element URL is build from a collection URL by appending an element ID. It identifies a single element (entity) within the collection. Example: https://mydomain.com/myapp/services/rest/mycomponent/v1/myentity/42\n\n\n\n\nTo follow KISS avoid using plural forms (…​/productmanagement/v1/products vs. …​/productmanagement/v1/product/42). Always use singular forms and avoid confusions (except for the rare cases where no singular exists).\n\n\nThe REST URL scheme fits perfect for CRUD operations.\nFor business operations (processing, calculation, advanced search, etc.) we simply append a collection URL with the name of the business operation.\nThen we can POST the input for the business operation and get the result back. Example: https://mydomain.com/myapp/services/rest/mycomponent/v1/myentity/search\n\n\n\n"}