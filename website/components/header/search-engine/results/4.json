{"type":"doc","filename":"asciidoc_devonfw-guide_devon4j.wiki_devon4j.asciidoc_guides.html","anchor":"devonfw-guide_devon4j.wiki_guide-jwt.asciidoc","title":"JWT","breadcrumbs":["Java","Spring","Guides"],"text":"JWT\n\nJWT (JSON Web Token) is an open standard (see RFC 7519) for creating JSON based access tokens that assert some number of claims.\nWith an IT landscape divided into multiple smaller apps you want to avoid coupling all those apps or services tightly with your IAM (Identity &amp; Access Management).\nInstead your apps simply expects a JWT as bearer-token in the Authorization HTTP header field.\nAll it needs to do for authentication is validating this JWT.\nThe actual authentication is done centrally by an access system (IAM) that authors those JWTs.\nTherefore we recommend to use strong asymmetric cryptography to sign the JWT when it is authored.\nCreate a keypair per environment and keep the private key as a secret only known to the access system authorizing the JWTs.\nYour apps only need to know the public key in order to validate the JWT.\nAny request without a JWT or with an invalid JWT will be rejected (with status code 401).\n\n\nWhen using spring check the JWT Spring-Starter.\nFor quarkus follow Using JWT RBAC.\n\n\n\n\n\n"}